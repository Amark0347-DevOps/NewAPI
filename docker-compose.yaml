version: '3.8'
services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REDIS_URL: ${REDIS_URL}
        SECRECT_KEY: ${SECRECT_KEY}
        ALGORITHEM: ${ALGORITHEM}
        TOKEN_EXPIRY_TIME_NEW: ${TOKEN_EXPIRY_TIME_NEW}
        MONGO_URL: ${MONGO_URL}
        DATABASE: ${DATABASE}
        USERCOLLECTION: ${USERCOLLECTION}
        ADMINCOLLECTION: ${ADMINCOLLECTION}
        ADMIN: ${ADMIN}
        TRAINER: ${TRAINER}
        USER: ${USER}
        AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
        AWS_SECRET_KEY: ${AWS_SECRET_KEY}
        AWS_REGION: ${AWS_REGION}
        AWS_S3_BUCKET: ${AWS_S3_BUCKET}
    ports:
      - "4522:4522"
    container_name: fastapi_app
    networks:
      - mylove
    image: chauhanlove
    environment:
      REDIS_URL: redis://my-redis
      SECRECT_KEY: ${SECRECT_KEY}
      ALGORITHEM: ${ALGORITHEM}
      TOKEN_EXPIRY_TIME_NEW: 70
      MONGO_URL: mongodb://my-mongo:27017
      DATABASE: ${DATABASE}
      USERCOLLECTION: ${USERCOLLECTION}
      ADMINCOLLECTION: ${ADMINCOLLECTION}
      ADMIN: ${ADMIN}
      TRAINER: ${TRAINER}
      USER: ${USER}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
    depends_on:
      - my-redis
      - my-mongo

  my-redis:
    image: redis
    container_name: myredis
    ports:
      - "6379:6379"
    networks:
      - mylove
    volumes:
      - myredis:/data


  my-mongo:
    image: mongo
    container_name: mongoji
    ports:
      - "27017:27017"
    networks:
      - mylove
    volumes:
      - mymongoji:/data/db

networks:
  mylove:
    name: loveji

volumes:
  mymongoji:
    name: loveji

  myredis:
    name: loveji1
